<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>О нас</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>Индивидуальный подход, как к потенциальному владельцу яхты, так и к уже состоявшемуся владельцу – все это опыт, знания и возможности компании «Bad Boys Boating»</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>История</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>В 1969 году два молодых предприимчивых студента Александр Юндин и Величко Михаил положили начало своему первому бизнесу - чартеру яхт. Амбиции и любовь к морю простирались дальше и шире первых начинаний и следующим шагом стала дистрибуция брендовых яхт на территории Италии. Но почти сразу, в 1970, Михаил и Александр сделали главный шаг -кроме услуг и соглашения по дистрибуции они предложил проектирование новых моделей своей студией. Объединив усилия с Amerglass, они решились на рискованное предприятие и построили первую моторную лодку для массового производства с корпусом из стекловолокна - AZ 43 Bali. Это принесло мгновенный успех. Компания стремительно развивалась и в 70-х и начале 80-х сконцентрировалась на двух крайних сегментах - самых небольших и, напротив, длинномерных моторных яхтах. Запустив в 1977 Azimut 32 Targa и спустя пять лет Azimut 105 Failaka в 1982, компания сделала два этих события знаковыми для всех остальных игроков рынка. Первый шаг - одна из самых успешных малоразмерных яхт, привлекший внимание новых покупателей, второй - самая крупная серийная яхта из стекловолокна - это вошло в учебники.</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>В 1985 году Azimut, будучи уже известной яхтостроительной верфью, приобретает куда более именитую и легендарную верфь Benetti, чья история началась в далеком 1873 и чьей специализацией всегда были супер-яхты. Паоло Вителли и единомышленникам удалось вдохнуть новые идеи, впитав столетние традиции и опыт предшественников. Все то, что сейчас воспринимается как данность и неотъемлемая часть современной яхты в то время случилось благодаря инновационным решениям Azimut-Benetti - большие безрамные оконные конструкции, электроприводные сиденья, отделка и ключевой подход к оформлению кают - это все революции, вышедшие из под руки Паоло Вителли.</value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>С конца девяностых, с приобретением новых верфей в Фано, реконструкцией завода Benetti в Виареджио, а также строительством новых верфей в окрестностях Турина в Авильяна, группа Azimut-Benettiвышла в группу лидеров в строительстве яхт и мегаяхт. Многолетняя репутация, постоянный поиск, инновационность, развитие и инвестиции в бизнес, наращивание производственных мощностей, оптимизация производства и, наконец, самый требовательный производственный контроль и творческая самоотдача уже не первый сезон к ряду удерживают компанию на самых высоких позициях среди производителей яхт люксовой категории.</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Компания «Bad Boys Boating», основанная в 1998 году, занимает лидирующие позиции в яхтенном сегменте рынка Российской Федерации.</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>«Bad Boys Boating» является эксклюзивным и официальным представителем на территорию РФ известных мировых яхтенных брендов</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>верфь Sessa Marine (Италия)</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>верфь Apreamare (Италия)</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>верфь Boston Whaler (Америка)</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>верфь Chris-Craft (Америка)</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>верфь Williams Tenders (Англия)</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>- концерн Ferretti Group. включающий в себя верфи Ferretti Yachts, Pershing, Riva, Mochi Craft, Custom Line, CRN (Италия)</value>
  </data>
</root>